# frozenset - преобразует строку или любую последовательность(итерацию) "хешируемых" объектов в неизменяемое множество
# frozenset (неупорядоченная, неизменяемая последовательность с исключением дубликатов элементов в последовательности).
# dict{key : value}
# ключи - только неизменяемые объекты (строки, кортежи, числа, логические выражения), для которых можно посчитать хэш
# a=dict(zip(c,n)) - принимает два списка и соединяет их в один словарь
# проблема словаря - нужно првоерять, сущестует ли ключ, а если не существует, то что делать
# from numpy import *  # импортим всё
# defaultdict(int) - фабрика в аргументе  - defaultdict чтобы не проверять каждый раз, есть ли ключ
# def print('hello'+surname+name='ivan')  первый арг - позиционный, второй - именованный (все позиционные должны идти до именованных
# если не знаем, сколько параметров у функции, то
# def func(*args, **kwargs):  все именованные в kwargs, все позиционные в args
#     print(args,kwargs)
#
# global and local vriables
# если в локальной области нет желаемой переменной, а в глобальной - есть, то выведется глобальная
# или можно явно указатю в локальной области, что мы используем глобальную переменную: global a
#
# DocString
# def f(x):
# '''add 1 to x'''  # это докстринг


# SEMINAR
# task1/ есть некотрое кол-во предметов: часы, палатка и тп. каждый предмет имеет вес.
# турист может поднять определённое кол-во кг, какое-то колчиество вещей. вещей больше, чем он может унести.
 # пределить - какие вещи смогу пометиться в его рюкзак
 # 1 - нужно зафикисровать перечень предметов

# knapsack={'скотч':20, "зажигалка":20, "компас":100, "рубашка":300, "термос":1000, "бинокль":400, "бутерброд":800}
# tourist = int(input())
# a=[]
# for i in knapsack:
#     a.append(knapsack[i])
# a.sort()
# knapsack2={}
# for i in a:
#     for j in knapsack:
#         if knapsack[j]==i:
#             knapsack2[j]=i
# print(knapsack2)
# sum=0
# for i in knapsack2.keys():
#     sum+=knapsack[i]
#     if (sum<=tourist):
#         print(i)



